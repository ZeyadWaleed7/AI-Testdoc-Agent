{
  "file/src/test/java/org/apache/calcite/adapter/file/StatementCacheTest.java": {
    "content": "package org.apache.calcite.adapter.file;\n\nimport org.apache.calcite.jdbc.CalciteConnection;\nimport org.apache.calcite.schema.SchemaPlus;\nimport org.apache.calcite.util.Sources;\nimport org.junit.jupiter.api.AfterEach;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.Tag;\nimport org.junit.jupiter.api.io.TempDir;\nimport org.apache.calcite.adapter.file.BaseFileTest;\n\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.Statement;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n * Test that Statement queries benefit from plan caching.\n */\n@Tag(\"unit\")\npublic class StatementCacheTest extends BaseFileTest {\n    @TempDir\n    java.nio.file.Path tempDir;\n    \n    @BeforeEach\n    public void setUp() throws Exception {\n        // Clear any static caches that might interfere with test isolation\n        Sources.clearFileCache();\n        // Force garbage collection to release any resources\n        System.gc();\n        // Wait longer to ensure cleanup is complete\n        Thread.sleep(200);\n    }\n    \n    @AfterEach\n    public void tearDown() throws Exception {\n        // Clear caches after test to prevent contamination\n        Sources.clearFileCache();\n        System.gc();\n        Thread.sleep(200);\n        // Clear system properties\n        System.clearProperty(\"calcite.statement.cache.enabled\");\n        System.clearProperty(\"calcite.statement.cache.size\");\n    }\n    \n    @Test\n    public void testStatementCachePerformance() throws Exception {\n        // Enable the cache\n        System.setProperty(\"calcite.statement.cache.enabled\", \"true\");\n        System.setProperty(\"calcite.statement.cache.size\", \"100\");\n        \n        try (Connection connection = DriverManager.getConnection(\"jdbc:calcite:\");\n             CalciteConnection calciteConnection = connection.unwrap(CalciteConnection.",
    "language": "java"
  },
  "file/src/test/java/org/apache/calcite/adapter/file/UniqueFileJoinTest.java": {
    "content": "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.calcite.adapter.file;\n\nimport org.apache.calcite.adapter.file.BaseFileTest;\nimport org.junit.jupiter.api.Tag;\nimport org.junit.jupiter.api.Test;\n\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.ResultSet;\nimport java.sql.Statement;\nimport java.util.Properties;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n * Test join reordering with unique source files to eliminate cache conflicts.\n */\n@Tag(\"unit\")\npublic class UniqueFileJoinTest extends BaseFileTest {\n\n  @Test\n  public void testJoinWithUniqueFiles() throws Exception {\n    // Create unique temporary directory and files\n    File tempDir = new File(System.getProperty(\"java.io.tmpdir\"), \"test-\" + System.nanoTime());\n    tempDir.mkdirs();\n    \n    try {\n      // Create unique EMPS file with predictable table name\n      File empsFile = new File(tempDir, \"EMPSJOINREORDER.html\");\n      try (FileWriter writer = new FileWriter(empsFile)) {\n        writer.write(\"<!--\\n\");\n        writer.write(\"Licensed to the Apache Software Foundation (ASF) under one or more\\n\");\n        writer.write(\"contributor license agreeme",
    "language": "java"
  },
  "file/src/test/java/org/apache/calcite/adapter/file/conversion/ParquetAutoConversionTest.java": {
    "content": "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.calcite.adapter.file.conversion;\n\nimport org.apache.calcite.adapter.file.FileSchemaFactory;\nimport org.apache.calcite.jdbc.CalciteConnection;\nimport org.apache.calcite.schema.SchemaPlus;\nimport org.apache.calcite.util.Sources;\n\nimport org.junit.jupiter.api.AfterEach;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Tag;\nimport org.junit.jupiter.api.Test;\nimport org.opentest4j.TestAbortedException;\n\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.nio.charset.StandardCharsets;\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.ResultSet;\nimport java.sql.Statement;\nimport java.util.HashMap;\nimport java.util.Locale;\nimport java.util.Map;\nimport java.util.Properties;\nimport java.util.UUID;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\n/**\n * Test auto-conversion of files to Parquet when using Parquet execution engine.\n */\n@Tag(\"unit\")\npublic class ParquetAutoConversionTest {\n  private File tempDir;\n  private boolean shouldSkipTests;\n\n  @BeforeEach\n  public void setUp() throws Exce",
    "language": "java"
  },
  "file/src/test/java/org/apache/calcite/adapter/file/conversion/ParquetFileTest.java": {
    "content": "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.calcite.adapter.file;\n\nimport org.apache.avro.Schema;\nimport org.apache.avro.SchemaBuilder;\nimport org.apache.avro.generic.GenericData;\nimport org.apache.avro.generic.GenericRecord;\nimport org.apache.hadoop.conf.Configuration;\nimport org.apache.hadoop.fs.Path;\nimport org.apache.parquet.avro.AvroParquetWriter;\nimport org.apache.parquet.hadoop.ParquetWriter;\nimport org.apache.parquet.hadoop.metadata.CompressionCodecName;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Tag;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.io.TempDir;\n\nimport java.io.File;\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.ResultSet;\nimport java.sql.Statement;\nimport java.util.Locale;\nimport java.util.Properties;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\n/**\n * Test that Parquet files work as regular input files in the file adapter.\n */\n@Tag(\"unit\")\npublic class ParquetFileTest extends BaseFileTest {\n  @TempDir\n  java.nio.file.Path tempDir;\n\n  @BeforeEach\n  public void setUp() throws Exception {\n    // Create a Parquet file with test data\n    Fil",
    "language": "java"
  },
  "file/src/test/java/org/apache/calcite/adapter/file/core/FileAdapterTest.java": {
    "content": "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.calcite.adapter.file;\n\nimport org.apache.calcite.adapter.file.statistics.HLLSketchCache;\nimport org.apache.calcite.jdbc.CalciteConnection;\nimport org.apache.calcite.schema.Schema;\nimport org.apache.calcite.sql2rel.SqlToRelConverter;\nimport org.apache.calcite.util.TestUtil;\n\nimport com.google.common.collect.ImmutableMap;\n\nimport org.junit.jupiter.api.Tag;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.ExtendWith;\nimport org.junit.jupiter.api.parallel.Isolated;\nimport org.junit.jupiter.params.ParameterizedTest;\nimport org.junit.jupiter.params.provider.MethodSource;\n\nimport java.math.BigDecimal;\nimport java.io.File;\nimport java.sql.Connection;\nimport java.sql.DatabaseMetaData;\nimport java.sql.Date;\nimport java.sql.DriverManager;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.ResultSetMetaData;\nimport java.sql.SQLException;\nimport java.sql.Statement;\nimport java.sql.Time;\nimport java.sql.Timestamp;\nimport java.sql.Types;\nimport java.util.Properties;\nimport java.util.TimeZone;\nimport java.util.concurrent.TimeUnit;\nimport java.util.function.Consumer;\nimport java.util.stream.Stream;\n\nimport static org.apache.calcit",
    "language": "java"
  },
  "file/src/test/java/org/apache/calcite/adapter/file/excel/ExcelConversionTest.java": {
    "content": "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.calcite.adapter.file;\n\nimport org.apache.calcite.adapter.file.converters.SafeExcelToJsonConverter;\nimport org.apache.calcite.jdbc.CalciteConnection;\nimport org.apache.calcite.schema.SchemaPlus;\nimport org.apache.calcite.util.Sources;\n\nimport org.junit.jupiter.api.AfterEach;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Tag;\nimport org.junit.jupiter.api.Test;\n\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.nio.charset.StandardCharsets;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\nimport java.util.Properties;\n\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\n/**\n * Test for Excel file conversion and conflict handling.\n */\n@Tag(\"unit\")\npublic class ExcelConversionTest extends BaseFileTest {\n  private Path tempDir;\n\n  @BeforeEach\n  public void setUp() throws Exception {\n    // Clear static caches that might interfere with test isolation\n    Sources.clearFileCache();\n    SafeExcelToJsonConverter.clearCache();\n    // Create a temporary directory for each test\n    tempDir = Fi",
    "language": "java"
  },
  "file/src/test/java/org/apache/calcite/adapter/file/iceberg/IcebergNonEmptyTableTest.java": {
    "content": "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.calcite.adapter.file.iceberg;\n\nimport org.apache.calcite.adapter.file.BaseFileTest;\nimport org.apache.hadoop.conf.Configuration;\nimport org.apache.iceberg.Table;\nimport org.apache.iceberg.catalog.TableIdentifier;\nimport org.apache.iceberg.data.GenericRecord;\nimport org.apache.iceberg.data.IcebergGenerics;\nimport org.apache.iceberg.data.Record;\nimport org.apache.iceberg.data.parquet.GenericParquetWriter;\nimport org.apache.iceberg.hadoop.HadoopCatalog;\nimport org.apache.iceberg.io.CloseableIterable;\nimport org.apache.iceberg.io.DataWriter;\nimport org.apache.iceberg.io.OutputFile;\nimport org.apache.iceberg.parquet.Parquet;\nimport org.apache.iceberg.PartitionSpec;\nimport org.apache.iceberg.Schema;\nimport org.apache.iceberg.types.Types;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.io.TempDir;\n\nimport java.nio.file.Path;\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.ResultSet;\nimport java.sql.Statement;\nimport java.time.Instant;\nimport java.time.OffsetDateTime;\nimport java.time.ZoneOffset;\nimport java.util.Arrays;\nimport java.util.Properties;\nimport java.util.UUID;\n\nimport static or",
    "language": "java"
  },
  "file/src/test/java/org/apache/calcite/adapter/file/materialization/MaterializationTest.java": {
    "content": "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.calcite.adapter.file;\n\nimport org.apache.calcite.jdbc.CalciteConnection;\nimport org.apache.calcite.schema.SchemaPlus;\nimport org.apache.calcite.util.Sources;\n\nimport org.junit.jupiter.api.AfterEach;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Tag;\nimport org.junit.jupiter.api.Test;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.nio.charset.StandardCharsets;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.ResultSet;\nimport java.sql.Statement;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Locale;\nimport java.util.Map;\nimport java.util.Properties;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assumptions.assumeFalse;\n\n/**\n * Test demonstrating materialized view functionality using the materializations operand.\n */\n@Tag(\"unit\")\npublic class Materia",
    "language": "java"
  },
  "file/src/test/java/org/apache/calcite/adapter/file/refresh/JsonPathRefreshTest.java": {
    "content": "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.calcite.adapter.file.refresh;\n\nimport org.apache.calcite.adapter.file.BaseFileTest;\nimport org.apache.calcite.adapter.file.converters.JsonPathConverter;\nimport org.apache.calcite.adapter.file.metadata.ConversionMetadata;\n\nimport org.junit.jupiter.api.AfterEach;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Tag;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.parallel.Execution;\nimport org.junit.jupiter.api.parallel.ExecutionMode;\nimport org.junit.jupiter.api.parallel.Isolated;\nimport org.junit.jupiter.api.parallel.ResourceLock;\n\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.nio.charset.StandardCharsets;\nimport java.nio.file.Files;\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.ResultSet;\nimport java.sql.Statement;\nimport java.util.Properties;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n * Test that JSONPath extractions work correctly with the refresh mechanism.\n * Tests that when source JSON files change, extracted JSON files are re-converted\n * and queries return updated data.\n */\n@Tag(\"unit\")\n@Isolated  // Needs isolation due to static Convers",
    "language": "java"
  },
  "file/src/test/java/org/apache/calcite/adapter/file/refresh/RefreshEndToEndTest.java": {
    "content": "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.calcite.adapter.file.refresh;\n\nimport org.apache.calcite.adapter.file.metadata.ConversionMetadata;\nimport org.apache.calcite.adapter.file.converters.HtmlToJsonConverter;\n\nimport org.apache.calcite.adapter.file.BaseFileTest;\n\nimport org.junit.jupiter.api.AfterEach;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Tag;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.parallel.Isolated;\n\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.nio.charset.StandardCharsets;\nimport java.nio.file.Files;\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.ResultSet;\nimport java.sql.Statement;\nimport java.util.List;\nimport java.util.Properties;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.junit.jupiter.api.Assumptions.assumeFalse;\n\n/**\n * End-to-end tests for file conversion refresh functionality.\n * Tests that converters automatically record metadata for refresh tracking.\n */\n@Tag(\"unit\")\n@Isolated  // Needs isolation due to static ConversionMetadata state\npublic class RefreshEndToEndTest extends BaseFileTest {\n  \n  /**\n   * Checks if refresh functionality is ",
    "language": "java"
  },
  "file/src/test/java/org/apache/calcite/adapter/file/table/MultipleSchemaTest.java": {
    "content": "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.calcite.adapter.file.table;\n\nimport org.apache.calcite.adapter.file.FileSchemaFactory;\n\nimport org.apache.calcite.jdbc.CalciteConnection;\nimport org.apache.calcite.schema.SchemaPlus;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.Tag;\nimport org.junit.jupiter.api.io.TempDir;\n\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.nio.charset.StandardCharsets;\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.ResultSet;\nimport java.sql.Statement;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Properties;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n * Tests for multiple schema configurations with File adapter.\n */\n@Tag(\"unit\")\npublic class MultipleSchemaTest extends org.apache.calcite.adapter.file.BaseFileTest {\n\n  @TempDir\n  File tempDir;\n\n  private File salesDir;\n  private File hrDir;\n\n  @BeforeEach\n  public void setUp() throws IOException {\n    salesDir = new File(tempDir, \"sales\");\n    hrDir = new File(tempDir, \"hr\");\n    salesDir.mkdirs();\n    hrDir.mkdirs();\n\n    // Create test data in sales directory\n    createCsvFi",
    "language": "java"
  },
  "file/src/test/java/org/apache/calcite/adapter/file/table/RefreshableTableTest.java": {
    "content": "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.calcite.adapter.file;\n\nimport org.apache.calcite.adapter.file.BaseFileTest;\n\nimport org.apache.calcite.adapter.file.refresh.RefreshInterval;\nimport org.apache.calcite.adapter.file.refresh.RefreshableTable;\nimport org.apache.calcite.adapter.file.refresh.RefreshableJsonTable;\nimport org.apache.calcite.jdbc.CalciteConnection;\nimport org.apache.calcite.schema.SchemaPlus;\nimport org.apache.calcite.schema.Table;\n\nimport org.apache.avro.Schema;\nimport org.apache.avro.generic.GenericData;\nimport org.apache.avro.generic.GenericRecord;\nimport org.apache.hadoop.conf.Configuration;\nimport org.apache.hadoop.fs.Path;\nimport org.apache.parquet.avro.AvroParquetWriter;\nimport org.apache.parquet.hadoop.ParquetWriter;\nimport org.apache.parquet.hadoop.metadata.CompressionCodecName;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Disabled;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.Tag;\nimport org.junit.jupiter.api.io.TempDir;\n\nimport static org.junit.jupiter.api.Assumptions.assumeFalse;\n\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.nio.charset.StandardCharsets;\nimport java.sql.Connection;\nimport jav",
    "language": "java"
  }
}