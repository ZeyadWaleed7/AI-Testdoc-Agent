{
  "googlemock/src/gmock-internal-utils.cc": {
    "status": "modified",
    "patch": "@@ -180,8 +180,7 @@ GTEST_API_ void Log(LogSeverity severity, const std::string& message,\n       std::cout << \"\\n\";\n     }\n     std::cout << \"Stack trace:\\n\"\n-              << ::testing::internal::GetCurrentOsStackTraceExceptTop(\n-                     ::testing::UnitTest::GetInstance(), actual_to_skip);\n+              << ::testing::internal::GetCurrentOsStackTraceExceptTop(actual_to_skip);\n   }\n   std::cout << ::std::flush;\n }",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "language": "cc",
    "imports": [],
    "full_content": "// Copyright 2007, Google Inc.\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//     * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//     * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n// Google Mock - a framework for writing C++ mock classes.\n//\n// This file defines some utilities useful for implementing Google\n// Mock.  They are subject to change without notice, so please DO NOT\n// USE THEM IN USER CODE.\n\n#include \"gmock/internal/gmock-internal-utils.h\"\n\n#include <ctype.h>\n\n#include <array>\n#include <cctype>\n#include <cstdint>\n#include <cstring>\n#include <ostream>  // NOLINT\n#include <string>\n#include <vector>\n\n#includ",
    "raw_url": "https://github.com/google/googletest/raw/7107c441885900fedb8458a96bddca16e9768573/googlemock%2Fsrc%2Fgmock-internal-utils.cc",
    "is_test_file": false
  },
  "googletest/include/gtest/internal/gtest-internal.h": {
    "status": "modified",
    "patch": "@@ -829,8 +829,7 @@ class TypeParameterizedTestSuite<Fixture, internal::None, Types> {\n // For example, if Foo() calls Bar(), which in turn calls\n // GetCurrentOsStackTraceExceptTop(..., 1), Foo() will be included in\n // the trace but Bar() and GetCurrentOsStackTraceExceptTop() won't.\n-GTEST_API_ std::string GetCurrentOsStackTraceExceptTop(UnitTest* unit_test,\n-                                                       int skip_count);\n+GTEST_API_ std::string GetCurrentOsStackTraceExceptTop(int skip_count);\n \n // Helpers for suppressing warnings on unreachable code or constant\n // condition.",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "language": "h",
    "imports": [],
    "full_content": "// Copyright 2005, Google Inc.\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//     * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//     * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n// The Google C++ Testing and Mocking Framework (Google Test)\n//\n// This header file declares functions and macros used internally by\n// Google Test.  They are subject to change without notice.\n\n// IWYU pragma: private, include \"gtest/gtest.h\"\n// IWYU pragma: friend gtest/.*\n// IWYU pragma: friend gmock/.*\n\n#ifndef GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_\n#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_\n\n#include \"gte",
    "raw_url": "https://github.com/google/googletest/raw/7107c441885900fedb8458a96bddca16e9768573/googletest%2Finclude%2Fgtest%2Finternal%2Fgtest-internal.h",
    "is_test_file": false
  },
  "googletest/src/gtest.cc": {
    "status": "modified",
    "patch": "@@ -6245,7 +6245,7 @@ void UnitTestImpl::UnshuffleTests() {\n // GetCurrentOsStackTraceExceptTop(..., 1), Foo() will be included in\n // the trace but Bar() and GetCurrentOsStackTraceExceptTop() won't.\n GTEST_NO_INLINE_ GTEST_NO_TAIL_CALL_ std::string\n-GetCurrentOsStackTraceExceptTop(UnitTest* /*unit_test*/, int skip_count) {\n+GetCurrentOsStackTraceExceptTop(int skip_count) {\n   // We pass skip_count + 1 to skip this wrapper function in addition\n   // to what the user really wants to skip.\n   return GetUnitTestImpl()->CurrentOsStackTraceExceptTop(skip_count + 1);",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "language": "cc",
    "imports": [],
    "full_content": "// Copyright 2005, Google Inc.\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//     * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//     * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n//\n// The Google C++ Testing and Mocking Framework (Google Test)\n\n#include \"gtest/gtest.h\"\n\n#include <ctype.h>\n#include <stdarg.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n#include <wchar.h>\n#include <wctype.h>\n\n#include <algorithm>\n#include <chrono>  // NOLINT\n#include <cmath>\n#include <cstdint>\n#include <initializer_list>\n#include <iomanip>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <map>\n#include <ost",
    "raw_url": "https://github.com/google/googletest/raw/7107c441885900fedb8458a96bddca16e9768573/googletest%2Fsrc%2Fgtest.cc",
    "is_test_file": true
  },
  "googletest/test/googletest-param-test-test.cc": {
    "status": "modified",
    "patch": "@@ -821,7 +821,7 @@ TEST_F(PREFIX_WITH_MACRO(NamingTestNonParametrized),\n TEST(MacroNameing, LookupNames) {\n   std::set<std::string> know_suite_names, know_test_names;\n \n-  auto ins = testing::UnitTest::GetInstance();\n+  const auto& ins = testing::UnitTest::GetInstance();\n   int ts = 0;\n   while (const testing::TestSuite* suite = ins->GetTestSuite(ts++)) {\n     know_suite_names.insert(suite->name());\n@@ -897,7 +897,7 @@ INSTANTIATE_TEST_SUITE_P(CustomParamNameLambda, CustomLambdaNamingTest,\n                          });\n \n TEST(CustomNamingTest, CheckNameRegistry) {\n-  ::testing::UnitTest* unit_test = ::testing::UnitTest::GetInstance();\n+  const auto& unit_test = ::testing::UnitTest::GetInstance();\n   std::set<std::string> test_names;\n   for (int suite_num = 0; suite_num < unit_test->total_test_suite_count();\n        ++suite_num) {",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "language": "cc",
    "imports": [],
    "full_content": "// Copyright 2008, Google Inc.\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//     * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//     * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n//\n// Tests for Google Test itself. This file verifies that the parameter\n// generators objects produce correct parameter sequences and that\n// Google Test runtime instantiates correct tests from those sequences.\n\n#include \"test/googletest-param-test-test.h\"\n\n#include <algorithm>\n#include <iostream>\n#include <list>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\n\n#include \"gtest/gtest.h\"\n#include \"src/gtest-internal-i",
    "raw_url": "https://github.com/google/googletest/raw/7107c441885900fedb8458a96bddca16e9768573/googletest%2Ftest%2Fgoogletest-param-test-test.cc",
    "is_test_file": true
  },
  "googletest/test/gtest-unittest-api_test.cc": {
    "status": "modified",
    "patch": "@@ -106,7 +106,7 @@ const int kTypedTests = 1;\n // Since tests can be run in any order, the values the accessors that track\n // test execution (such as failed_test_count) can not be predicted.\n TEST(ApiTest, UnitTestImmutableAccessorsWork) {\n-  UnitTest* unit_test = UnitTest::GetInstance();\n+  const auto& unit_test = UnitTest::GetInstance();\n \n   ASSERT_EQ(2 + kTypedTestSuites, unit_test->total_test_suite_count());\n   EXPECT_EQ(1 + kTypedTestSuites, unit_test->test_suite_to_run_count());\n@@ -224,7 +224,7 @@ TEST(DISABLED_Test, Dummy2) {}\n class FinalSuccessChecker : public Environment {\n  protected:\n   void TearDown() override {\n-    UnitTest* unit_test = UnitTest::GetInstance();\n+    const auto& unit_test = UnitTest::GetInstance();\n \n     EXPECT_EQ(1 + kTypedTestSuites, unit_test->successful_test_suite_count());\n     EXPECT_EQ(3 + kTypedTests, unit_test->successful_test_count());",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "language": "cc",
    "imports": [],
    "full_content": "// Copyright 2009 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//     * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//     * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n//\n// The Google C++ Testing and Mocking Framework (Google Test)\n//\n// This file contains tests verifying correctness of data provided via\n// UnitTest's public methods.\n\n#include <string.h>  // For strcmp.\n\n#include <algorithm>\n\n#include \"gtest/gtest.h\"\n\nusing ::testing::InitGoogleTest;\n\nnamespace testing {\nnamespace internal {\n\ntemplate <typename T>\nstruct LessByName {\n  bool operator()(const T* a, const T* b) {\n    return strcmp(a->name(), ",
    "raw_url": "https://github.com/google/googletest/raw/7107c441885900fedb8458a96bddca16e9768573/googletest%2Ftest%2Fgtest-unittest-api_test.cc",
    "is_test_file": true
  },
  "googletest/test/gtest_unittest.cc": {
    "status": "modified",
    "patch": "@@ -7703,7 +7703,7 @@ auto* dynamic_test = testing::RegisterTest(\n     __LINE__, []() -> DynamicUnitTestFixture* { return new DynamicTest; });\n \n TEST(RegisterTest, WasRegistered) {\n-  auto* unittest = testing::UnitTest::GetInstance();\n+  const auto& unittest = testing::UnitTest::GetInstance();\n   for (int i = 0; i < unittest->total_test_suite_count(); ++i) {\n     auto* tests = unittest->GetTestSuite(i);\n     if (tests->name() != std::string(\"DynamicUnitTestFixture\")) continue;",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "language": "cc",
    "imports": [],
    "full_content": "// Copyright 2005, Google Inc.\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//     * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//     * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n//\n// Tests for Google Test itself.  This verifies that the basic constructs of\n// Google Test work.\n\n#include \"gtest/gtest.h\"\n\n// Verifies that the command line flag variables can be accessed in\n// code once \"gtest.h\" has been #included.\n// Do not move it after other gtest #includes.\nTEST(CommandLineFlagsTest, CanBeAccessedInCodeOnceGTestHIsIncluded) {\n  bool dummy =\n      GTEST_FLAG_GET(also_run_disabled_tests) ||\n      GTEST_FLAG_GET(br",
    "raw_url": "https://github.com/google/googletest/raw/7107c441885900fedb8458a96bddca16e9768573/googletest%2Ftest%2Fgtest_unittest.cc",
    "is_test_file": true
  }
}