{
  "src/test/java/com/thealgorithms/strings/ReverseStringTest.java": {
    "content": "package com.thealgorithms.strings;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\nimport java.util.stream.Stream;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.params.ParameterizedTest;\nimport org.junit.jupiter.params.provider.Arguments;\nimport org.junit.jupiter.params.provider.CsvSource;\nimport org.junit.jupiter.params.provider.MethodSource;\n\npublic class ReverseStringTest {\n\n    private static Stream<Arguments> testCases() {\n        return Stream.of(Arguments.of(\"Hello World\", \"dlroW olleH\"), Arguments.of(\"helloworld\", \"dlrowolleh\"), Arguments.of(\"123456789\", \"987654321\"), Arguments.of(\"\", \"\"), Arguments.of(\"A\", \"A\"), Arguments.of(\"ab\", \"ba\"),\n            Arguments.of(\"  leading and trailing spaces  \", \"  secaps gniliart dna gnidael  \"), Arguments.of(\"!@#$%^&*()\", \")(*&^%$#@!\"), Arguments.of(\"MixOf123AndText!\", \"!txeTdnA321fOxiM\"));\n    }\n\n    @ParameterizedTest\n    @MethodSource(\"testCases\")\n    public void testReverseString(String input, String expectedOutput) {\n        assertEquals(expectedOutput, ReverseString.reverse(input));\n    }\n\n    @ParameterizedTest\n    @MethodSource(\"testCases\")\n    public void testReverseString2(String input, String expectedOutput) {\n        assertEquals(expectedOutput, ReverseString.reverse2(input));\n    }\n\n    @ParameterizedTest\n    @MethodSource(\"testCases\")\n    public void testReverseString3(String input, String expectedOutput) {\n        assertEquals(expectedOutput, ReverseString.reverse3(input));\n    }\n\n    @ParameterizedTest\n    @MethodSource(\"testCases\")\n    public void testReverseStringUsingStack(String input, String expectedOutput) {\n        assertEquals(expectedOutput, ReverseString.reverseStringUsingStack(input));\n    }\n\n    @Test\n    public void testReverseStringUsingStackWithNullInput() {\n        assertThrows(IllegalArgumentException.class, () -> ReverseString.reverseStringUsingStack(null));\n    }\n\n    @ParameterizedTest\n    @CsvSou",
    "language": "java"
  }
}