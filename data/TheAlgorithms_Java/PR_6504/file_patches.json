{
  "src/main/java/com/thealgorithms/strings/ReverseString.java": "@@ -86,4 +86,17 @@ public static String reverseStringUsingStack(String str) {\n         }\n         return reversedString.toString();\n     }\n+\n+    /**\n+     * Reverse the String using Recursion\n+     * @param str string to be reversed\n+     * @return reversed string\n+     */\n+    public static String reverseStringUsingRecursion(String str) {\n+        if (str.isEmpty()) {\n+            return str;\n+        } else {\n+            return reverseStringUsingRecursion(str.substring(1)) + str.charAt(0);\n+        }\n+    }\n }",
  "src/main/java/com/thealgorithms/strings/ReverseStringRecursive.java": "@@ -1,21 +0,0 @@\n-package com.thealgorithms.strings;\n-\n-/**\n- * Reverse String using Recursion\n- */\n-public final class ReverseStringRecursive {\n-    private ReverseStringRecursive() {\n-    }\n-\n-    /**\n-     * @param str string to be reversed\n-     * @return reversed string\n-     */\n-    public static String reverse(String str) {\n-        if (str.isEmpty()) {\n-            return str;\n-        } else {\n-            return reverse(str.substring(1)) + str.charAt(0);\n-        }\n-    }\n-}",
  "src/test/java/com/thealgorithms/strings/ReverseStringRecursiveTest.java": "@@ -1,16 +0,0 @@\n-package com.thealgorithms.strings;\n-\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-\n-import org.junit.jupiter.params.ParameterizedTest;\n-import org.junit.jupiter.params.provider.CsvSource;\n-\n-public class ReverseStringRecursiveTest {\n-    @ParameterizedTest\n-    @CsvSource({\"'Hello World', 'dlroW olleH'\", \"'helloworld', 'dlrowolleh'\", \"'123456789', '987654321'\", \"'', ''\", \"'A', 'A'\", \"'!123 ABC xyz!', '!zyx CBA 321!'\", \"'Abc 123 Xyz', 'zyX 321 cbA'\", \"'12.34,56;78:90', '09:87;65,43.21'\", \"'abcdEFGHiJKL', 'LKJiHGFEdcba'\",\n-        \"'MixOf123AndText!', '!txeTdnA321fOxiM'\"})\n-    public void\n-    testReverseString(String input, String expectedOutput) {\n-        assertEquals(expectedOutput, ReverseStringRecursive.reverse(input));\n-    }\n-}",
  "src/test/java/com/thealgorithms/strings/ReverseStringTest.java": "@@ -7,6 +7,7 @@\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.params.ParameterizedTest;\n import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.CsvSource;\n import org.junit.jupiter.params.provider.MethodSource;\n \n public class ReverseStringTest {\n@@ -44,4 +45,12 @@ public void testReverseStringUsingStack(String input, String expectedOutput) {\n     public void testReverseStringUsingStackWithNullInput() {\n         assertThrows(IllegalArgumentException.class, () -> ReverseString.reverseStringUsingStack(null));\n     }\n+\n+    @ParameterizedTest\n+    @CsvSource({\"'Hello World', 'dlroW olleH'\", \"'helloworld', 'dlrowolleh'\", \"'123456789', '987654321'\", \"'', ''\", \"'A', 'A'\", \"'!123 ABC xyz!', '!zyx CBA 321!'\", \"'Abc 123 Xyz', 'zyX 321 cbA'\", \"'12.34,56;78:90', '09:87;65,43.21'\", \"'abcdEFGHiJKL', 'LKJiHGFEdcba'\",\n+        \"'MixOf123AndText!', '!txeTdnA321fOxiM'\"})\n+    public void\n+    testReverseStringUsingRecursion(String input, String expectedOutput) {\n+        assertEquals(expectedOutput, ReverseString.reverseStringUsingRecursion(input));\n+    }\n }"
}